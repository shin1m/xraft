#include "symbol.h"

namespace xemmai
{

t_object* t_type_of<xraft::t_key>::f_define(t_library* a_library)
{
	using namespace xraft;
	return t_base::f_define(a_library, [](auto a_fields)
	{
		a_fields
		(L"NONE"sv, c_key__NONE)
		(L"BACK_SPACE"sv, c_key__BACK_SPACE)
		(L"TAB"sv, c_key__TAB)
		(L"LINEFEED"sv, c_key__LINEFEED)
		(L"CLEAR"sv, c_key__CLEAR)
		(L"RETURN"sv, c_key__RETURN)
		(L"PAUSE"sv, c_key__PAUSE)
		(L"SCROLL_LOCK"sv, c_key__SCROLL_LOCK)
		(L"SYS_REQ"sv, c_key__SYS_REQ)
		(L"ESCAPE"sv, c_key__ESCAPE)
		(L"DELETE"sv, c_key__DELETE)
		(L"HOME"sv, c_key__HOME)
		(L"LEFT"sv, c_key__LEFT)
		(L"UP"sv, c_key__UP)
		(L"RIGHT"sv, c_key__RIGHT)
		(L"DOWN"sv, c_key__DOWN)
		(L"PRIOR"sv, c_key__PRIOR)
		(L"NEXT"sv, c_key__NEXT)
		(L"END"sv, c_key__END)
		(L"BEGIN"sv, c_key__BEGIN)
		(L"SELECT"sv, c_key__SELECT)
		(L"PRINT"sv, c_key__PRINT)
		(L"EXECUTE"sv, c_key__EXECUTE)
		(L"INSERT"sv, c_key__INSERT)
		(L"UNDO"sv, c_key__UNDO)
		(L"REDO"sv, c_key__REDO)
		(L"MENU"sv, c_key__MENU)
		(L"FIND"sv, c_key__FIND)
		(L"CANCEL"sv, c_key__CANCEL)
		(L"HELP"sv, c_key__HELP)
		(L"BREAK"sv, c_key__BREAK)
		(L"MODE_SWITCH"sv, c_key__MODE_SWITCH)
		(L"NUM_LOCK"sv, c_key__NUM_LOCK)
		(L"KP_SPACE"sv, c_key__KP_SPACE)
		(L"KP_TAB"sv, c_key__KP_TAB)
		(L"KP_ENTER"sv, c_key__KP_ENTER)
		(L"KP_F1"sv, c_key__KP_F1)
		(L"KP_F2"sv, c_key__KP_F2)
		(L"KP_F3"sv, c_key__KP_F3)
		(L"KP_F4"sv, c_key__KP_F4)
		(L"KP_HOME"sv, c_key__KP_HOME)
		(L"KP_LEFT"sv, c_key__KP_LEFT)
		(L"KP_UP"sv, c_key__KP_UP)
		(L"KP_RIGHT"sv, c_key__KP_RIGHT)
		(L"KP_DOWN"sv, c_key__KP_DOWN)
		(L"KP_PRIOR"sv, c_key__KP_PRIOR)
		(L"KP_NEXT"sv, c_key__KP_NEXT)
		(L"KP_END"sv, c_key__KP_END)
		(L"KP_BEGIN"sv, c_key__KP_BEGIN)
		(L"KP_INSERT"sv, c_key__KP_INSERT)
		(L"KP_DELETE"sv, c_key__KP_DELETE)
		(L"KP_EQUAL"sv, c_key__KP_EQUAL)
		(L"KP_MULTIPLY"sv, c_key__KP_MULTIPLY)
		(L"KP_ADD"sv, c_key__KP_ADD)
		(L"KP_SEPARATOR"sv, c_key__KP_SEPARATOR)
		(L"KP_SUBTRACT"sv, c_key__KP_SUBTRACT)
		(L"KP_DECIMAL"sv, c_key__KP_DECIMAL)
		(L"KP_DIVIDE"sv, c_key__KP_DIVIDE)
		(L"KP_0"sv, c_key__KP_0)
		(L"KP_1"sv, c_key__KP_1)
		(L"KP_2"sv, c_key__KP_2)
		(L"KP_3"sv, c_key__KP_3)
		(L"KP_4"sv, c_key__KP_4)
		(L"KP_5"sv, c_key__KP_5)
		(L"KP_6"sv, c_key__KP_6)
		(L"KP_7"sv, c_key__KP_7)
		(L"KP_8"sv, c_key__KP_8)
		(L"KP_9"sv, c_key__KP_9)
		(L"F1"sv, c_key__F1)
		(L"F2"sv, c_key__F2)
		(L"F3"sv, c_key__F3)
		(L"F4"sv, c_key__F4)
		(L"F5"sv, c_key__F5)
		(L"F6"sv, c_key__F6)
		(L"F7"sv, c_key__F7)
		(L"F8"sv, c_key__F8)
		(L"F9"sv, c_key__F9)
		(L"F10"sv, c_key__F10)
		(L"F11"sv, c_key__F11)
		(L"F12"sv, c_key__F12)
		(L"SHIFT_L"sv, c_key__SHIFT_L)
		(L"SHIFT_R"sv, c_key__SHIFT_R)
		(L"CONTROL_L"sv, c_key__CONTROL_L)
		(L"CONTROL_R"sv, c_key__CONTROL_R)
		(L"CAPS_LOCK"sv, c_key__CAPS_LOCK)
		(L"SHIFT_LOCK"sv, c_key__SHIFT_LOCK)
		(L"META_L"sv, c_key__META_L)
		(L"META_R"sv, c_key__META_R)
		(L"ALT_L"sv, c_key__ALT_L)
		(L"ALT_R"sv, c_key__ALT_R)
		(L"LEFT_TAB"sv, c_key__LEFT_TAB)
		(L"SPACE"sv, c_key__SPACE)
		(L"EXCLAM"sv, c_key__EXCLAM)
		(L"QUOTEDBL"sv, c_key__QUOTEDBL)
		(L"NUMBERSIGN"sv, c_key__NUMBERSIGN)
		(L"DOLLAR"sv, c_key__DOLLAR)
		(L"PERCENT"sv, c_key__PERCENT)
		(L"AMPERSAND"sv, c_key__AMPERSAND)
		(L"APOSTROPHE"sv, c_key__APOSTROPHE)
		(L"PARENLEFT"sv, c_key__PARENLEFT)
		(L"PARENRIGHT"sv, c_key__PARENRIGHT)
		(L"ASTERISK"sv, c_key__ASTERISK)
		(L"PLUS"sv, c_key__PLUS)
		(L"COMMA"sv, c_key__COMMA)
		(L"MINUS"sv, c_key__MINUS)
		(L"PERIOD"sv, c_key__PERIOD)
		(L"SLASH"sv, c_key__SLASH)
		(L"D0"sv, c_key__0)
		(L"D1"sv, c_key__1)
		(L"D2"sv, c_key__2)
		(L"D3"sv, c_key__3)
		(L"D4"sv, c_key__4)
		(L"D5"sv, c_key__5)
		(L"D6"sv, c_key__6)
		(L"D7"sv, c_key__7)
		(L"D8"sv, c_key__8)
		(L"D9"sv, c_key__9)
		(L"COLON"sv, c_key__COLON)
		(L"SEMICOLON"sv, c_key__SEMICOLON)
		(L"LESS"sv, c_key__LESS)
		(L"EQUAL"sv, c_key__EQUAL)
		(L"GREATER"sv, c_key__GREATER)
		(L"QUESTION"sv, c_key__QUESTION)
		(L"AT"sv, c_key__AT)
		(L"A"sv, c_key__A)
		(L"B"sv, c_key__B)
		(L"C"sv, c_key__C)
		(L"D"sv, c_key__D)
		(L"E"sv, c_key__E)
		(L"F"sv, c_key__F)
		(L"G"sv, c_key__G)
		(L"H"sv, c_key__H)
		(L"I"sv, c_key__I)
		(L"J"sv, c_key__J)
		(L"K"sv, c_key__K)
		(L"L"sv, c_key__L)
		(L"M"sv, c_key__M)
		(L"N"sv, c_key__N)
		(L"O"sv, c_key__O)
		(L"P"sv, c_key__P)
		(L"Q"sv, c_key__Q)
		(L"R"sv, c_key__R)
		(L"S"sv, c_key__S)
		(L"T"sv, c_key__T)
		(L"U"sv, c_key__U)
		(L"V"sv, c_key__V)
		(L"W"sv, c_key__W)
		(L"X"sv, c_key__X)
		(L"Y"sv, c_key__Y)
		(L"Z"sv, c_key__Z)
		(L"BRACKETLEFT"sv, c_key__BRACKETLEFT)
		(L"BACKSLASH"sv, c_key__BACKSLASH)
		(L"BRACKETRIGHT"sv, c_key__BRACKETRIGHT)
		(L"ASCIICIRCUM"sv, c_key__ASCIICIRCUM)
		(L"UNDERSCORE"sv, c_key__UNDERSCORE)
		(L"GRAVE"sv, c_key__GRAVE)
		(L"BRACELEFT"sv, c_key__BRACELEFT)
		(L"BAR"sv, c_key__BAR)
		(L"BRACERIGHT"sv, c_key__BRACERIGHT)
		(L"ASCIITILDE"sv, c_key__ASCIITILDE)
		;
	});
}

t_object* t_type_of<xraft::t_modifier>::f_define(t_library* a_library)
{
	using namespace xraft;
	return t_base::f_define(a_library, [](auto a_fields)
	{
		a_fields
		(L"NONE"sv, c_modifier__NONE)
		(L"SHIFT"sv, c_modifier__SHIFT)
		(L"LOCK"sv, c_modifier__LOCK)
		(L"CONTROL"sv, c_modifier__CONTROL)
		(L"ALTERNATE"sv, c_modifier__ALTERNATE)
		(L"BUTTON1"sv, c_modifier__BUTTON1)
		(L"BUTTON2"sv, c_modifier__BUTTON2)
		(L"BUTTON3"sv, c_modifier__BUTTON3)
		(L"BUTTON4"sv, c_modifier__BUTTON4)
		(L"BUTTON5"sv, c_modifier__BUTTON5)
		;
	});
}

t_object* t_type_of<xraft::t_button>::f_define(t_library* a_library)
{
	using namespace xraft;
	return t_base::f_define(a_library, [](auto a_fields)
	{
		a_fields
		(L"NONE"sv, c_button__NONE)
		(L"BUTTON1"sv, c_button__1)
		(L"BUTTON2"sv, c_button__2)
		(L"BUTTON3"sv, c_button__3)
		(L"BUTTON4"sv, c_button__4)
		(L"BUTTON5"sv, c_button__5)
		;
	});
}

}
